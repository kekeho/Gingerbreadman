version: '2.3'
services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: "gingerbreadman"
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
       - "pgdata:/var/lib/postgresql/data"
  
  db-controller:
    build: db_controller
    depends_on:
      - db
      - service_face_grouping
    ports:
      - "8080:8080"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8888:8888"
    volumes:
      - "./db_controller:/code"
  
  nginx:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./front:/usr/share/nginx/html
    links:
      - db-controller
    environment:
      TZ: "UTC"
    command: nginx -c /etc/nginx/nginx.conf
    depends_on:
      - db-controller
      - mapcache
    ports: 
      - 8000:80
  
  service_face_location:
    build:
      context: "services/face_location"
      dockerfile: "Dockerfile_GPU"
    runtime: nvidia
    environment:
      - GB_GPU=True
      - NGINX_HOST=nginx
      - NGINX_PORT=80
    depends_on:
      - db-controller
    volumes:
      - "./services/face_location:/code"
  
  service_face_encoding:
    build:
      context: "services/face_encoding"
      dockerfile: "Dockerfile_GPU"
    runtime: nvidia
    environment: 
      - NGINX_HOST=nginx
      - NGINX_PORT=80
    depends_on:
      - db-controller
    volumes:
      - "./services/face_encoding:/code"
  
  service_face_grouping:
    build: services/face_grouping
    volumes:
      - "./services/face_grouping:/code"
  
  mapcache:
    build: mapcache
    volumes:
      - "./mapcache/cache:/mapcache/cache"


volumes:
  pgdata:
    driver: "local"
